{"version":3,"file":"static/js/172.11c8492b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Settings/Settings.module.css?96b0","components/Settings/Settings.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings_wrapper\":\"Settings_settings_wrapper__kOlyR\",\"left_panel\":\"Settings_left_panel__vU804\",\"active\":\"Settings_active__RYhnw\",\"setting_item\":\"Settings_setting_item__iPA2O\",\"border\":\"Settings_border__2io6m\",\"text_field\":\"Settings_text_field__rFguc\",\"submit\":\"Settings_submit__vYYEi\",\"error\":\"Settings_error__9OLtQ\"};","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { editProfileTC, getProfileTC, ProfileInfoType, RequestStatusType, setProfileEditStatusAC } from \"../../redux/profileReducer\";\nimport { AppDispatchType, AppStateType } from \"../../redux/store\";\nimport BlockComponent from \"../common/BlockComponent/BlockComponent\";\nimport { ButtonOrange } from \"../common/ButtonOrange/ButtonOrange\";\nimport { Circle } from \"../common/Preloaders/Circle/Circle\";\nimport s from \"./Settings.module.css\";\n\ntype SettingsType = \"profile\";\n\nconst Settings = () => {\n    const { t } = useTranslation();\n\n    const dispatch = useDispatch<AppDispatchType>();\n\n    const profileData = useSelector<AppStateType, ProfileInfoType>((state) => state.profile.profileData);\n    const status = useSelector<AppStateType, RequestStatusType>((state) => state.profile.profileEditStatus);\n    const user_id = useSelector<AppStateType, string>((state) => state.app.user.user_id);\n\n    const [tab, setTab] = useState<SettingsType>(\"profile\");\n    const [profileInfoData, setProfileInfoData] = useState<ProfileInfoType>(profileData);\n\n    const onSubmit = () => {\n        dispatch(editProfileTC(profileInfoData));\n    };\n\n    useEffect(() => {\n        status === \"succeeded\" && setTimeout(() => dispatch(setProfileEditStatusAC(\"idle\")), 3000);\n    }, [status, dispatch]);\n\n    useEffect(() => {\n        dispatch(getProfileTC(user_id));\n    }, [dispatch]);\n\n    const error = profileInfoData.first_name.length > 20 || profileInfoData.last_name.length > 20;\n\n    return (\n        <div className={s.settings_wrapper}>\n            <div className={s.left_panel}>\n                <span onClick={() => setTab(\"profile\")} className={tab === \"profile\" ? s.active : \"\"}>\n                    {t(\"profile.profile\")}\n                </span>\n            </div>\n            <BlockComponent\n                title={t(\"profile.settings\")}\n                width={\"100%\"}\n                margin={\"0 0 0 20px\"}\n                component={\n                    <div className={s.settings}>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.firstName\")}</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder={t(\"settings.firstName\")}\n                                value={profileInfoData.first_name}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, first_name: e.currentTarget.value })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.lastName\")}</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder={t(\"settings.lastName\")}\n                                value={profileInfoData.last_name}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, last_name: e.currentTarget.value })}\n                            />\n                        </div>\n                        {error && <span className={s.error}>{t(\"settings.error\")}</span>}\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.gender\")}</label>\n                            <select className={s.text_field} onChange={(e) => setProfileInfoData({ ...profileInfoData, gender: e.target.value })} defaultValue=\"Male\">\n                                <option value=\"Male\">{t(\"settings.male\")}</option>\n                                <option value=\"Female\">{t(\"settings.female\")}</option>\n                            </select>\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.birthday\")}</label>\n                            <input\n                                type=\"date\"\n                                className={s.text_field}\n                                value={profileInfoData.birthday}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, birthday: e.currentTarget.value })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.country\")}</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder={t(\"settings.countruPlaceholder\")}\n                                value={profileInfoData.country}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, country: e.currentTarget.value })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.education\")}</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                value={profileInfoData.education}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, education: e.currentTarget.value })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.work\")}</label>\n                            <input type=\"text\" className={s.text_field} value={profileInfoData.work} onChange={(e) => setProfileInfoData({ ...profileInfoData, work: e.currentTarget.value })} />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">{t(\"settings.aboutMe\")}</label>\n                            <textarea\n                                className={s.text_field}\n                                cols={30}\n                                rows={10}\n                                value={profileInfoData.about}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, about: e.currentTarget.value })}\n                            />\n                        </div>\n                        <div className={s.border}></div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">Facebook:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://facebook.com/\"\n                                value={profileInfoData.contacts.facebook}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, facebook: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">Instagram:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://instagram.com/\"\n                                value={profileInfoData.contacts.instagram}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, instagram: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">LinkedIn:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://www.linkedin.com/\"\n                                value={profileInfoData.contacts.linkedin}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, linkedin: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">Telegram:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://t.me/\"\n                                value={profileInfoData.contacts.telegram}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, telegram: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">Twitter:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://www.twitter.com/\"\n                                value={profileInfoData.contacts.twitter}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, twitter: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">VK:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://vk.com\"\n                                value={profileInfoData.contacts.vk}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, vk: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.setting_item}>\n                            <label htmlFor=\"\">Youtube:</label>\n                            <input\n                                type=\"text\"\n                                className={s.text_field}\n                                placeholder=\"https://youtube.com/\"\n                                value={profileInfoData.contacts.youtube}\n                                onChange={(e) => setProfileInfoData({ ...profileInfoData, contacts: { ...profileInfoData.contacts, youtube: e.currentTarget.value } })}\n                            />\n                        </div>\n                        <div className={s.submit}>\n                            {status === \"loading\" ? <Circle /> : <ButtonOrange title={t(\"settings.confirm\")} width={200} height={40} margin={\"10px 0 0 0\"} onClick={onSubmit} disabled={error} />}\n                            {status === \"succeeded\" && <span>{t(\"settings.success\")}</span>}\n                        </div>\n                    </div>\n                }\n            />\n        </div>\n    );\n};\n\nexport default Settings;\n"],"names":["t","useTranslation","dispatch","useDispatch","profileData","useSelector","state","profile","status","profileEditStatus","user_id","app","user","useState","tab","setTab","profileInfoData","setProfileInfoData","useEffect","setTimeout","setProfileEditStatusAC","getProfileTC","error","first_name","length","last_name","className","s","onClick","BlockComponent","title","width","margin","component","htmlFor","type","placeholder","value","onChange","e","currentTarget","gender","target","defaultValue","birthday","country","education","work","cols","rows","about","contacts","facebook","instagram","linkedin","telegram","twitter","vk","youtube","Circle","C","ButtonOrange","height","editProfileTC","disabled"],"sourceRoot":""}